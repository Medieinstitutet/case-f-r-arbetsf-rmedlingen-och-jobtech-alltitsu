import{r as s,c as a,h as e}from"./index-40fbc463.js";import{k as n,K as i}from"./keyboardHandler.util-e79b3eb4-6263bf5c.js";const r=class{constructor(t){s(this,t),this.afOnEsc=a(this,"afOnEsc",7),this.afOnEnter=a(this,"afOnEnter",7),this.afOnTab=a(this,"afOnTab",7),this.afOnSpace=a(this,"afOnSpace",7),this.afOnShiftTab=a(this,"afOnShiftTab",7),this.afOnUp=a(this,"afOnUp",7),this.afOnDown=a(this,"afOnDown",7),this.afOnLeft=a(this,"afOnLeft",7),this.afOnRight=a(this,"afOnRight",7),this.afOnHome=a(this,"afOnHome",7),this.afOnEnd=a(this,"afOnEnd",7),this.afOnKeyUp=a(this,"afOnKeyUp",7)}keyupHandler(t){switch(n(t)){case i.SHIFT_TAB:this.afOnShiftTab.emit(t);case i.DOWN_ARROW:this.afOnDown.emit(t),this.afOnKeyUp.emit(t);break;case i.UP_ARROW:this.afOnUp.emit(t),this.afOnKeyUp.emit(t);break;case i.LEFT_ARROW:this.afOnLeft.emit(t),this.afOnKeyUp.emit(t);break;case i.RIGHT_ARROW:this.afOnRight.emit(t),this.afOnKeyUp.emit(t);break;case i.ENTER:this.afOnEnter.emit(t),this.afOnKeyUp.emit(t);break;case i.ESCAPE:this.afOnEsc.emit(t),this.afOnKeyUp.emit(t);break;case i.TAB:this.afOnTab.emit(t),this.afOnKeyUp.emit(t);break;case i.SPACE:this.afOnSpace.emit(t),this.afOnKeyUp.emit(t);break;case i.HOME:this.afOnHome.emit(t),this.afOnKeyUp.emit(t);break;case i.END:this.afOnEnd.emit(t),this.afOnKeyUp.emit(t);break;case i.ANY:this.afOnKeyUp.emit(t);break;default:this.afOnKeyUp.emit(t);return}}render(){return e("slot",null)}};export{r as digi_util_keyup_handler};
